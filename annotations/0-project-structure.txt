ğŸ“¦ root
â”£ ğŸ“‚ pages
â”ƒ â”— ğŸ“œ index.js
â”£ ğŸ“‚ api
â”ƒ â”— ğŸ“‚ v1 (Rotas de API)
â”£ ğŸ“‚ models
â”ƒ â”£ ğŸ“œ user.js
â”ƒ â”£ ğŸ“œ content.js
â”ƒ â”— ğŸ“œ password.js
â”£ ğŸ“‚ infra
â”ƒ â”— ğŸ“œ database.js
â”ƒ â”— ğŸ“œ compose.yaml
â”ƒ â”£ ğŸ“‚ migrations
â”ƒ â”£ ğŸ“‚ provisioning
â”ƒ â”ƒ â”£ ğŸ“‚ staging
â”ƒ â”ƒ â”£ ğŸ“‚ production
â”£ ğŸ“‚ tests


=== Bibliotecas ===
Prettier = Para estilizaÃ§Ã£o padronizada de cÃ³digo
Reactjs e Dom = Para manipular pÃ¡gina web
Nextjs = Para encapsular o React
dotenv = Variaveis de ambiente
dotenv-expand = Permite interpolaÃ§Ã£o de variÃ¡veis de ambiente.
pg = Conector do Postgres
node-pg-migrate = Permite fazer Migrate no Postgres

=== Cloud ===
Projeto hospedado na Vercel
Postgres hospedado no Neon


=== Features ===
- Sistema API First
- Docker compose para serviÃ§os locais
- Testes de integraÃ§Ã£o com Jest
- API de Status do servidor
- ConfiguraÃ§Ã£o de MigraÃ§Ã£o UP de banco de dados via API
- Deploy em Cloud tanto do banco, quanto do servidor
- ConfiguraÃ§Ã£o em cloud para validaÃ§Ã£o e deploy automatico do servidor na Vercel
- Branchs de HomologaÃ§Ã£o e ProduÃ§Ã£o, com seus deploys individuais a cada Git Push para seus devidos ambientes de homologaÃ§Ã£o ou produÃ§Ã£o com base na Branch e env
